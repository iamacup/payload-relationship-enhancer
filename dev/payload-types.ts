/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    organisations: Organisation;
    layouts: Layout;
    features: Feature;
    media: Media;
    models: Model;
    products: Product;
    startblock: Startblock;
    endblock: Endblock;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
export interface User {
  id: string;
  permissions?: {
    globalRole?: 'globalAdmin' | null;
  };
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
export interface Organisation {
  id: string;
  publicIdentifier?: string | null;
  organisationName?: string | null;
  layouts?: (string | Layout)[] | null;
  CCData?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  products?:
    | {
        product?: (string | null) | Product;
        identifierOverrides?:
          | (
              | ModelIdentifierEANBlock
              | ModelIdentifierSKUBlock
              | ModelIdentifierMPNBlock
              | ModelIdentifierUPCBlock
              | ModelIdentifierCustomBlock
            )[]
          | null;
        id?: string | null;
      }[]
    | null;
  breakpoints: {
    default: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    xxl: string;
  };
  updatedAt: string;
  createdAt: string;
}
export interface Layout {
  id: string;
  features: (string | Feature)[];
  matcher?: RegexMatcherBlock[] | null;
  breakpointOverrides?: {
    default?: string | null;
    sm?: string | null;
    md?: string | null;
    lg?: string | null;
    xl?: string | null;
    xxl?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
export interface Feature {
  id: string;
  selector?: SelectorSizeBlock[] | null;
  placement?: PlacementSizeBlock[] | null;
  element?:
    | (
        | AllInOneButtonElementBlock
        | PCRoomsEmbedElementBlock
        | CrossmarkButtonElementBlock
        | ModelPlayerEmbedElementBlock
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface SelectorSizeBlock {
  default?: BasicSelectorBlock[] | null;
  sm?: BasicSelectorBlock[] | null;
  md?: BasicSelectorBlock[] | null;
  lg?: BasicSelectorBlock[] | null;
  xl?: BasicSelectorBlock[] | null;
  xxl?: BasicSelectorBlock[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'SelectorSizeBlock';
}
export interface BasicSelectorBlock {
  query: string;
  matchNumber: number;
  id?: string | null;
  blockName?: string | null;
  blockType: 'BasicSelector';
}
export interface PlacementSizeBlock {
  default?: (BasicPlacementBlock | FloatUIPlacementBlock)[] | null;
  sm?: (BasicPlacementBlock | FloatUIPlacementBlock)[] | null;
  md?: (BasicPlacementBlock | FloatUIPlacementBlock)[] | null;
  lg?: (BasicPlacementBlock | FloatUIPlacementBlock)[] | null;
  xl?: (BasicPlacementBlock | FloatUIPlacementBlock)[] | null;
  xxl?: (BasicPlacementBlock | FloatUIPlacementBlock)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'PlacementSizeBlock';
}
export interface BasicPlacementBlock {
  id?: string | null;
  blockName?: string | null;
  blockType: 'BasicPlacement';
}
export interface FloatUIPlacementBlock {
  coreConfig: {
    placement:
      | 'top'
      | 'top-start'
      | 'top-end'
      | 'right'
      | 'right-start'
      | 'right-end'
      | 'bottom'
      | 'bottom-start'
      | 'bottom-end'
      | 'left'
      | 'left-start'
      | 'left-end';
    strategy: 'absolute' | 'fixed';
  };
  autoUpdate?: {
    enabled?: boolean | null;
    config?: {
      ancestorScroll?: boolean | null;
      ancestorResize?: boolean | null;
      elementResize?: boolean | null;
      layoutShift?: boolean | null;
      animationFrame?: boolean | null;
    };
  };
  middlewareConfig?: {
    offset?: {
      enabled?: boolean | null;
      config?: {
        mainAxis?: number | null;
        crossAxis?: number | null;
        alignmentAxis?: number | null;
      };
    };
    autoPlacement?: {
      enabled?: boolean | null;
    };
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'FloatUIPlacement';
}
export interface AllInOneButtonElementBlock {
  children?:
    | (AllInOneModelPlayerButtonElementBlock | AllInOnePCRoomsButtonElementBlock | AllInOneUnisonButtonElementBlock)[]
    | null;
  initialProps: {
    buttonImage: string | Media;
    qrTitle: string;
    modalBackdropZIndex: number;
    modalZIndex: number;
    modalPlacement?: PlacementSizeBlock[] | null;
    style?: string | null;
    hostStyle?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'AllInOneButtonElement';
}
export interface AllInOneModelPlayerButtonElementBlock {
  children?: NullBlock[] | null;
  initialProps: {
    buttonImage: string | Media;
    title: string;
    modelURI: string;
    style?: string | null;
    hostStyle?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'AllInOneModelPlayerButtonElement';
}
export interface NullBlock {
  id?: string | null;
  blockName?: string | null;
  blockType: 'nullBlock';
}
export interface Media {
  id: string;
  altText: string;
  organisationSpecific?: (string | Organisation)[] | null;
  type: 'button';
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
export interface AllInOnePCRoomsButtonElementBlock {
  children?: NullBlock[] | null;
  initialProps: {
    buttonImage: string | Media;
    title: string;
    scaledownsplashscreen?: boolean | null;
    style?: string | null;
    hostStyle?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'AllInOnePCRoomsButtonElement';
}
export interface AllInOneUnisonButtonElementBlock {
  children?: NullBlock[] | null;
  initialProps: {
    buttonImage: string | Media;
    title: string;
    ispopup?: boolean | null;
    style?: string | null;
    hostStyle?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'AllInOneUnisonButtonElement';
}
export interface PCRoomsEmbedElementBlock {
  children?: NullBlock[] | null;
  initialProps?: {
    scaledownsplashscreen?: boolean | null;
    style?: string | null;
    hostStyle?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'PCRoomsEmbedElement';
}
export interface CrossmarkButtonElementBlock {
  children?: NullBlock[] | null;
  initialProps: {
    buttonImage: string | Media;
    modalBackdropZIndex: number;
    modalZIndex: number;
    theme: 'default' | 'unison' | 'evo';
    modalAnchorSelector?: SelectorSizeBlock[] | null;
    modalPlacement?: PlacementSizeBlock[] | null;
    style?: string | null;
    hostStyle?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'CrossmarkButtonElement';
}
export interface ModelPlayerEmbedElementBlock {
  children?: NullBlock[] | null;
  initialProps: {
    modelURI: string;
    style?: string | null;
    hostStyle?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'ModelPlayerEmbedElement';
}
export interface RegexMatcherBlock {
  regex: string;
  flags: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'RegexMatcher';
}
export interface Product {
  id: string;
  name?: string | null;
  arid?: string | null;
  size?: {
    depth?: number | null;
    height?: number | null;
    width?: number | null;
  };
  CCData?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  model?: (string | null) | Model;
  identifiers?:
    | (ModelIdentifierEANBlock | ModelIdentifierSKUBlock | ModelIdentifierMPNBlock | ModelIdentifierUPCBlock)[]
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface Model {
  id: string;
  location: string;
  updatedAt: string;
  createdAt: string;
}
export interface ModelIdentifierEANBlock {
  value?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ModelIdentifierEAN';
}
export interface ModelIdentifierSKUBlock {
  value?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ModelIdentifierSKU';
}
export interface ModelIdentifierMPNBlock {
  value?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ModelIdentifierMPN';
}
export interface ModelIdentifierUPCBlock {
  value?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ModelIdentifierUPC';
}
export interface ModelIdentifierCustomBlock {
  type?: string | null;
  value?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ModelIdentifierCustom';
}
export interface Startblock {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
}
export interface Endblock {
  id: string;
  name?: string | null;
  arrtest?:
    | {
        diffLevel?: (string | Startblock)[] | null;
        id?: string | null;
      }[]
    | null;
  groupName?: {
    startblocks?: (string | Startblock)[] | null;
  };
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
